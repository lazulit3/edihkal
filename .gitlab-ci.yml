# Only run pipelines for merge requests, scheduled pipelines, tags, and protected branches
workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_PIPELINE_SOURCE == "schedule"
    - if: $CI_COMMIT_REF_PROTECTED

default:
  before_script:
    - rustc --version
    - cargo --version
    - export PATH="${CARGO_HOME}/bin:${PATH}"
  cache:
    # Cache build/cargo dependencies based on Cargo.lock changes
    - key:
        files:
          - "**/Cargo.lock"
        prefix: cargo
      paths:
        - ${CARGO_HOME}/git/db
        - ${CARGO_HOME}/registry/cache
        - ${CARGO_HOME}/registry/index
        - target
  image: "rust:latest"

variables:
  # Ensure cargo home is relative to project dir (for caching)
  CARGO_HOME: "${CI_PROJECT_DIR}/.cargo"
  EDIHKAL_DATABASE__HOST: database
  EDIHKAL_DATABASE__PASSWORD: $POSTGRES_PASSWORD
  POSTGRES_DB: edihkal
  POSTGRES_USER: edihkal
  POSTGRES_PASSWORD: $POSTGRES_PASSWORD
  POSTGRES_HOST: database
  POSTGRES_HOST_AUTH_METHOD: trust

stages:
  - test

# Audit dependencies when a merge request changes Cargo.lock
mr-audit-code:
  interruptible: true
  stage: test
  script:
    - curl -LsSf https://github.com/rustsec/rustsec/releases/latest/download/cargo-audit-x86_64-unknown-linux-gnu-v0.17.4.tgz | tar xzf - -C ${CARGO_HOME}/bin/
    - cargo audit
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      changes:
        paths:
          - "**/Cargo.lock"
    - if: $CI_PIPELINE_SOURCE == "schedule"
      when: never

# Audit dependencies daily using shared CI/CD runner
daily-audit-code:
  interruptible: true
  stage: test
  script:
    - curl -LsSf https://github.com/rustsec/rustsec/releases/latest/download/cargo-audit-x86_64-unknown-linux-gnu-v0.17.4.tgz | tar xzf - -C ${CARGO_HOME}/bin/
    - cargo audit
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
  # Only run on shared runners until edihkal's runner has more uptime:
  # https://0xacab.org/lazulite/edihkal/-/issues/26
  tags:
    - shared

format-code:
  interruptible: true
  stage: test
  # Only run when rust code changes in a merge request.
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      changes:
        paths:
          - "**/*.rs"
  script:
    - rustup component add rustfmt
    - cargo fmt --all -- --check

lint-code:
  interruptible: true
  # Only run on pushes to protected branches or tags & when a merge request changes files that Clippy is interested in (rust code, Cargo files).
  rules:
    - if: $CI_COMMIT_REF_PROTECTED
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      changes:
        paths:
          - "**/*.rs"
          - "**/Cargo.*"
    - if: $CI_PIPELINE_SOURCE == "schedule"
      when: never
  stage: test
  script:
    - apt update -y
    # psql required by init_db.sh to wait for DB readiness before running lints
    - apt install -y postgresql-client
    - rustup component add clippy
    - curl -LsSf https://github.com/taiki-e/cargo-hack/releases/latest/download/cargo-hack-x86_64-unknown-linux-gnu.tar.gz  | tar xzf - -C ${CARGO_HOME}/bin
    - cargo hack --each-feature --exclude-no-default-features clippy -- -D warnings
  services:
    - name: postgres:15-alpine
      alias: database

test-code:
  interruptible: true
  # Only on pushes to protected branches or tags & when a merge request changes file that warrant tests.
  rules:
    - if: $CI_COMMIT_REF_PROTECTED
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      changes:
        paths:
          - "**/*.rs"
          - "**/*.sql"
          - "**/*.yaml"
          - "**/Cargo.*"
    - if: $CI_PIPELINE_SOURCE == "schedule"
      when: never
  stage: test
  script:
    - apt update -y
    # psql required by init_db.sh to wait for DB readiness before running tests
    - apt install -y postgresql-client
    - curl -LsSf https://github.com/taiki-e/cargo-hack/releases/latest/download/cargo-hack-x86_64-unknown-linux-gnu.tar.gz  | tar xzf - -C ${CARGO_HOME}/bin
    - cargo hack --each-feature --exclude-no-default-features test
  services:
    - name: postgres:15-alpine
      alias: database
