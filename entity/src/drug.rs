//! `SeaORM` Entity. Generated by sea-orm-codegen 0.11.0

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]
#[sea_orm(table_name = "drug")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    id: Uuid,
    #[sea_orm(unique)]
    name: String,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {}

impl Model {
    /// Construct a new `drug::Model` with a random id.
    pub fn new<S: Into<String>>(name: S) -> Self {
        Self {
            id: Uuid::new_v4(),
            name: name.into(),
        }
    }

    /// Returns the `Uuid` ID of the drug.
    pub fn id(&self) -> &Uuid {
        &self.id
    }

    /// Returns the name of the drug.
    pub fn name(&self) -> &str {
        &self.name
    }
}
